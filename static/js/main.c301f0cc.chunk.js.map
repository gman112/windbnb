{"version":3,"sources":["svg/logo.svg","components/Navbar/index.js","components/ResultBanner/index.js","components/FilterDraw/ResultItem/index.js","components/FilterDraw/ResultList/index.js","components/FilterDraw/GuestFilter/index.js","components/FilterDraw/index.js","components/CardList/CardItem/index.js","components/CardList/index.js","App.js","index.js"],"names":["Navbar","toggleNavbar","className","src","logo","alt","type","placeholder","onClick","max","min","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","ResultBanner","results","location","LocationItem","filterLocationValue","e","target","innerText","ResultList","locations","showList","map","index","ResultItem","GuestFilter","title","subtitle","margin","incrementCounter","decrementCounter","counter","FilterDraw","filterData","useState","adultCounter","setAdultCounter","childCounter","setChildCounter","totalGuests","setTotalGuests","value","onChange","prev","Card","photo","superHost","rating","toFixed","CardList","data","id","App","stays","setData","toggle","istoggle","setLocation","total","childTotal","adultTotal","filter","city","maxGuests","parseInt","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c301f0cc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.beef9462.svg\";","import { Fragment } from 'react';\nimport logo from '../../svg/logo.svg';\n\nconst Navbar = ({ toggleNavbar }) => {\n  return (\n    <Fragment>\n      <div className='flex w-full lg:w-auto'>\n        <img src={logo} alt='logo.svg' className='py-4 px-4' />\n      </div>\n      <div className='flex justify-center mx-4 lg:w-1/4 lg:mt-0'>\n        <div className='flex w-full shadow-lg rounded-l-2xl rounded-r-2xl mt-8 lg:mt-0'>\n          <input\n            type='text'\n            placeholder='London'\n            className=' border-2 border-r-0 border-gray=200 rounded-l-2xl py-2 px-2 text-sm w-3/4 focus:outline-none text-center capitalize'\n            onClick={() => toggleNavbar(false)}\n          />\n          <input\n            type='number'\n            max='10'\n            min='0'\n            placeholder='add guests'\n            className='border-2 border-r-1 border-gray-200 py-2 px-2 text-sm w-3/4 focus:outline-none h-14 text-center capitalize appearance-none'\n          />\n          <button\n            type='submit'\n            className='border-2 border-l-0 border-gray-200 rounded-r-2xl py-2 px-2 text-sm w-1/4 relative lg:bg-white lg:hover:bg-red-200'\n          >\n            <svg\n              xmlns='http://www.w3.org/2000/svg'\n              fill='none'\n              viewBox='0 0 24 24'\n              stroke='currentColor'\n              className='h-6 w-6 absolute text-red-500 top-4 right-4 lg:h-6 lg:w-6 lg:top-3 lg:right-4'\n            >\n              <path\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                strokeWidth='2'\n                d='M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z'\n              />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Navbar;\n","const ResultBanner = ({ results, location }) => {\n  return (\n    <div className='flex justify-between w-full mt-8 lg:mt-20 items-center'>\n      <p className='capitalize font-extrabold\ttext-lg ml-4 font-montserrat'>\n        stays in Britain\n      </p>\n      <p className='mr-4 font-light text-sm'>\n        {results > 10 ? `10+` : results}\n      </p>\n    </div>\n  );\n};\n\nexport default ResultBanner;\n","const LocationItem = ({ location, filterLocationValue }) => {\n  return (\n    <li\n      className='flex font-mulish font-lighter lg:items-center items-center mt-2'\n      onClick={(e) => filterLocationValue(e.target.innerText)}\n    >\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        className='h-6 w-6 mr-2 ml-4 text-gray-500'\n        fill='none'\n        viewBox='0 0 24 24'\n        stroke='currentColor'\n      >\n        <path\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          strokeWidth={2}\n          d='M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z'\n        />\n        <path\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          strokeWidth={2}\n          d='M15 11a3 3 0 11-6 0 3 3 0 016 0z'\n        />\n      </svg>\n      <button className='text-sm my-4'>{location}</button>\n    </li>\n  );\n};\n\nexport default LocationItem;\n","import ResultItem from '../ResultItem';\n\nconst ResultList = ({ locations, showList, filterLocationValue }) => {\n  return (\n    <div className={`lg:w-full lg:flex ml-4 mt-4 ${showList}`}>\n      <ul>\n        {locations.map((location, index) => {\n          return (\n            <ResultItem\n              location={location}\n              key={index}\n              filterLocationValue={filterLocationValue}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ResultList;\n","const GuestFilter = ({\n  title,\n  subtitle,\n  margin,\n  incrementCounter,\n  decrementCounter,\n  counter,\n}) => {\n  return (\n    <div className={`flex lg:flex lg:flex-col ${margin}`}>\n      <p className='font-bold capitalize'>{title}</p>\n      <p className='font-light my-4 text-gray-500'>{subtitle}</p>\n      <div className='lg:flex'>\n        <button onClick={() => decrementCounter()}>\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            className='h-6 w-6 border-2 border-gray-200 rounded-sm mr-2 text-gray-400'\n            fill='none'\n            viewBox='0 0 24 24'\n            stroke='currentColor'\n          >\n            <path\n              strokeLinecap='round'\n              strokeLinejoin='round'\n              strokeWidth={2}\n              d='M20 12H4'\n            />\n          </svg>\n        </button>\n        <span>{counter}</span>\n        <button onClick={() => incrementCounter()}>\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            className='h-6 w-6 border-2 border-gray-200 rounded-sm ml-2 text-gray-400'\n            fill='none'\n            viewBox='0 0 24 24'\n            stroke='currentColor'\n          >\n            <path\n              strokeLinecap='round'\n              strokeLinejoin='round'\n              strokeWidth={2}\n              d='M12 4v16m8-8H4'\n            />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default GuestFilter;\n","import { createRef, useState } from 'react';\nimport ResultList from './ResultList';\nimport GuestFilter from './GuestFilter';\n\nconst FilterDraw = ({\n  toggleNavbar,\n  locations,\n  filterLocationValue,\n  filterData,\n  location,\n}) => {\n  const [adultCounter, setAdultCounter] = useState(0);\n  const [childCounter, setChildCounter] = useState(0);\n  const [totalGuests, setTotalGuests] = useState();\n\n  return (\n    <div className='flex flex-col lg:flex lg:flex-row lg:w-full lg:flex-wrap'>\n      <div className='flex justify-between mx-4 mt-4 items-center'>\n        <p className='font-bold text-sm lg:hidden'>edit your search</p>\n        <button\n          className='outline-none lg:hidden'\n          onClick={() => toggleNavbar(true)}\n        >\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            className='h-6 w-6 lg:h-8 lg:w-8'\n            fill='none'\n            viewBox='0 0 24 24'\n            stroke='currentColor'\n          >\n            <path\n              strokeLinecap='round'\n              strokeLinejoin='round'\n              strokeWidth={2}\n              d='M6 18L18 6M6 6l12 12'\n            />\n          </svg>\n        </button>\n      </div>\n      <div className='flex flex-col border-2 border-gray-100 mx-4 rounded-2xl mt-4 relative shadow-md lg:flex lg:flex-row lg:w-3/4'>\n        <input\n          value={location}\n          type='text'\n          placeholder='London'\n          className='h-14 border-b-1 border-gray-200 px-4 capitalize lg:focus:border-gray-600 lg:w-1/2 lg:border-r-2 lg:border-b-0 rounded-l-2xl outline-none'\n        />\n        <input\n          value={totalGuests}\n          onChange={(e) => setTotalGuests(e.target.value)}\n          type='number'\n          placeholder='add guests'\n          className='h-14 px-4 capitalize lg:w-1/2 lg:focus:border-gray-600 lg:border-b-0 rounded-r-2xl outline-none'\n        />\n      </div>\n      <ResultList\n        locations={locations}\n        showList={'lg:hidden'}\n        filterLocationValue={filterLocationValue}\n      />\n      <button\n        className='flex bg-red-500 justify-evenly text-white rounded-3xl w-2/5 self-center py-4 px-4 mt-6 lg:w-1/5 lg:justify-center'\n        onClick={() => filterData(totalGuests, childCounter, adultCounter)}\n      >\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          className='h-6 w-6'\n          fill='none'\n          viewBox='0 0 24 24'\n          stroke='currentColor'\n        >\n          <path\n            strokeLinecap='round'\n            strokeLinejoin='round'\n            strokeWidth={2}\n            d='M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z'\n          />\n        </svg>\n        <span className='capitalize'>search</span>\n      </button>\n      <div className='lg:flex lg:w-3/4 mx-12 mt-8'>\n        <ResultList\n          locations={locations}\n          showList={'hidden'}\n          filterLocationValue={filterLocationValue}\n        />\n        <div className='lg:w-full lg:flex lg:flex-col hidden'>\n          <GuestFilter\n            title={'adults'}\n            subtitle={'Ages 13 or above'}\n            counter={adultCounter}\n            incrementCounter={() => setAdultCounter((prev) => prev + 1)}\n            decrementCounter={() =>\n              setAdultCounter((prev) => (prev <= 0 ? 0 : prev - 1))\n            }\n          />\n          <GuestFilter\n            title={'children'}\n            subtitle={'Ages 12-2'}\n            margin='mt-8'\n            counter={childCounter}\n            incrementCounter={() => setChildCounter((prev) => prev + 1)}\n            decrementCounter={() =>\n              setChildCounter((prev) => (prev <= 0 ? 0 : prev - 1))\n            }\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterDraw;\n","const Card = ({ photo, superHost, title, rating }) => {\n  return (\n    <div className='flex flex-col mx-2 my-8'>\n      <img\n        src={photo}\n        alt='home.jpg'\n        className='object-cover rounded-xl h-60'\n      />\n      <div className='flex items-center justify-between w-full mt-2'>\n        {/* super host */}\n        {superHost && (\n          <p className='border-2 rounded-xl border-gray-500 text-xs text-center font-semibold p-1'>\n            super host\n          </p>\n        )}\n        {/* apartment title */}\n        <p\n          className={\n            superHost\n              ? 'text-sm truncate w-3/5 text-center'\n              : 'text-sm truncate'\n          }\n        >\n          {title}\n        </p>\n        {/* apartment rating */}\n        <p className='flex items-center'>\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            className='h-4 w-4 fill-current text-red-500 ml-2'\n            fill='none'\n            viewBox='0 0 24 24'\n            stroke='currentColor'\n          >\n            <path\n              strokeLinecap='round'\n              strokeLinejoin='round'\n              strokeWidth={2}\n              d='M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z'\n            />\n          </svg>\n          <span className='text-sm ml-2'>{rating.toFixed(2)}</span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import Card from './CardItem';\n\nconst CardList = ({ data }) => {\n  return (\n    <div className='flex flex-col mt-8 lg:grid lg:grid-cols-3 lg:w-full lg:gap-4'>\n      {data.map(({ id, superHost, title, rating, photo }) => {\n        return (\n          <Card\n            key={id}\n            superHost={superHost}\n            title={title}\n            rating={rating}\n            photo={photo}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport ResultBanner from './components/ResultBanner';\nimport FilterDraw from './components/FilterDraw';\nimport CardList from './components/CardList';\nimport stays from './stays.json';\n\nconst App = () => {\n  const [data, setData] = useState(stays);\n  const [toggle, istoggle] = useState(true);\n  const [location, setLocation] = useState('');\n\n  const filterData = (total, childTotal, adultTotal) => {\n    const totalGuests = childTotal + adultTotal;\n    total > 0\n      ? setData(\n          stays.filter(\n            ({ city, maxGuests }) =>\n              city === location && maxGuests === parseInt(total)\n          )\n        )\n      : setData(\n          stays.filter(\n            ({ city, maxGuests }) =>\n              city === location && maxGuests === parseInt(totalGuests)\n          )\n        );\n\n    istoggle(true);\n  };\n\n  return (\n    <div className='flex flex-col lg:flex lg:justify-between lg:flex-row lg:items-center lg:mt-12 lg:mx-8 lg:flex-wrap'>\n      {toggle ? (\n        <Navbar toggleNavbar={(toggle) => istoggle(toggle)} />\n      ) : (\n        <FilterDraw\n          toggleNavbar={(toggle) => istoggle(toggle)}\n          filterLocationValue={(location) => setLocation(location)}\n          filterData={filterData}\n          locations={['London', 'Birmingham', 'Liverpool', 'Edinburgh']}\n          location={location}\n        />\n      )}\n      <ResultBanner results={data.length} />\n      <CardList data={data} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}